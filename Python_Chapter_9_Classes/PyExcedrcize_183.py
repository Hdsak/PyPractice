#9-13. Переработка с OrderedDict Rewrite: начните с упражнения 6-4 (с. 113),
#  в котором стандартный словарь используется для представления глоссария.
#  Перепишите программу с использованием класса OrderedDict и убедитесь в том,
#  что порядок вывода совпадает с порядком добавления пар «ключ—значение» в словарь.
from collections import OrderedDict
prog_ordered_dict=OrderedDict()
prog_ordered_dict['АРМ']='Место оператора, оборудованное всеми средствами, необходимыми для выполнения определённых функций. В системах обработки данных и учреждениях обычно АРМ — это дисплей с клавиатурой, но может использоваться также и принтер, внешние ЗУ и др.'
prog_ordered_dict['АОС']='Комплексы программно-технических и учебно-методических средств, обеспечивающих активную учебную деятельность: обучение конкретным знаниям, проверку ответов учащихся, возможность подсказки, занимательность изучаемого материала.'
prog_ordered_dict['Адаптер']='Устройство связи компьютера с периферийными устройствами.'
prog_ordered_dict['Адрес']='Номер конкретного байта оперативной памяти компьютера.'
prog_ordered_dict['Алгоpитм']='Заранее заданное понятное и точное предписание возможному исполнителю совершить определенную последовательность действий для получения решения задачи за конечное число шагов.'
for k,n in prog_ordered_dict.items():
    print(k + " : " + n+"\n")

#9-14. Кубики: модуль random содержит функции для генерирования случайных чисел разными способами. 
# Функция randint() возвращает целое число в заданном диапазоне.
#  Следующий код возвращает число от 1 до 6:
#from random import randint
#x = randint(1, 6)
#Создайте класс Die с одним атрибутом с именем sides, который содержит значение по умолчанию 6.
#  Напишите метод roll_die() для вывода случайного числа от 1 до количества сторон кубика.
#  Создайте экземпляр, моделирующий 6-гранный кубик, и имитируйте 10 бросков.
#Создайте модели 10- и 20-гранного кубика. Имитируйте 10 бросков каждого кубика.
from random import randint
class Die():
    def __init__(self,sides):
        self.sides=sides
    def roll_die(self):
        x=randint(1,self.sides)
        print(x)
cube=Die(6)

for i in range(10):
    cube.roll_die()
tentaider=Die(10)
print("\n")
for i in range(10):
    tentaider.roll_die()
twentaider=Die(20)
print("\n")
for i in range(10):
    twentaider.roll_die()
#9-15. Модуль недели: для знакомства со стандартной библиотекой Python отлично подойдет
#  сайт Python Module of the Week. Откройте сайт http://pymotw.com/ и просмотрите оглавление. 
# Найдите модуль, который покажется вам интересным, 
# и прочитайте про него или изучите документацию по модулям collections и random.
